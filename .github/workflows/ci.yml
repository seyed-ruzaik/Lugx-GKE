name: CI/CD for Lugx Gaming GKE Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  PROJECT_ID: lugx-gaming-465010
  CLUSTER_NAME: lugx-cluster
  REGION: asia-south1

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout Code
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Authenticate to GCP
    - name: Authenticate to GCP
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    # 3. Configure Docker to use GCR
    - name: Configure Docker for GCR
      run: gcloud auth configure-docker

    # 4. Build and push Docker images
    - name: Build and push frontend image
      run: |
        docker build -t gcr.io/$PROJECT_ID/lugx-frontend ./
        docker push gcr.io/$PROJECT_ID/lugx-frontend

    - name: Build and push game-service image
      run: |
        docker build -t gcr.io/$PROJECT_ID/game-service ./lugx-microservices/game-service
        docker push gcr.io/$PROJECT_ID/game-service

    - name: Build and push order-service image
      run: |
        docker build -t gcr.io/$PROJECT_ID/order-service ./lugx-microservices/order-service
        docker push gcr.io/$PROJECT_ID/order-service

    - name: Build and push analytics-service image
      run: |
        docker build -t gcr.io/$PROJECT_ID/analytics-service ./lugx-microservices/analytics-service
        docker push gcr.io/$PROJECT_ID/analytics-service

    # 5. Get GKE credentials
    - name: Get GKE credentials
      run: gcloud container clusters get-credentials $CLUSTER_NAME --region $REGION --project $PROJECT_ID

    # 6. Apply Kubernetes manifests
    - name: Deploy to GKE
      run: |
        kubectl apply -f k8s-frontend.yaml
        kubectl apply -f ./lugx-microservices/game-service/k8s-game-service.yaml
        kubectl apply -f ./lugx-microservices/order-service/k8s-order-service.yaml
        kubectl apply -f ./lugx-microservices/analytics-service/k8s-analytics-service.yaml

    # 7. Check deployed pods
    - name: Verify deployment
      run: kubectl get pods
